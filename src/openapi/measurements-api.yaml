openapi: "3.0.0"
info:
  version: 0.1.0
  title: Measurements API
  description: API to fetch ruuvi tag measurements data.
  contact:
    name: tbd
    email: tbd@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: http://localhost:7001
    description: Local API
tags:
  - name: Measurements
    description: Operations to fetch sensor measurement data
  - name: Sensors
    description: Operations to manage sensors

paths:
  /measurements:
    get:
      tags:
        - Measurements
      description: Return measurement data for selected time period.
      operationId: getMeasurements
      parameters:
        - in: query
          name: startTime
          description: Start time as defined by RFC 3339, section 5.6.
          schema:
            type: string
            format: date-time
            nullable: true
          example: "2022-06-21T17:32:28Z"
        - in: query
          name: endTime
          description: End time as defined by RFC 3339, section 5.6.
          schema:
            type: string
            format: date-time
            nullable: true
          example: "2022-06-22T17:32:28Z"
        - in: query
          name: source
          description: Measurement source identifier.
          schema:
            type: string
            nullable: true
            example: "C6:4C:96:B3:20:7E"
        - in: query
          name: orderBy
          description: Order results by column. Format is column_name:sort_direction.
          schema:
            type: string
            default: "time:asc"
            example: "time:asc"
        - in: query
          name: limit
          description: Maximum number of results to return
          schema:
            type: integer
            minimum: 0
            maximum: 1000
            default: 100
        - in: query
          name: offset
          description: Starting offset
          schema:
            type: integer
            minimum: 0
            default: 0

      responses:
        "200":
          description: Measurements response
          content:
            "application/json; charset=utf-8":
              schema:
                $ref: "#/components/schemas/MeasurementsDataResponse"
        "400":
          description: Bad Request
          content:
            "application/json; charset=utf-8":
              schema:
                $ref: "#/components/schemas/ValidationProblemDetails"
        default:
          description: Unexpected error
          content:
            "application/json; charset=utf-8":
              schema:
                $ref: "#/components/schemas/ProblemDetails"

  /measurements/batch-insert:
    post:
      tags:
        - Measurements
      description: Create multiple measurements.
      operationId: postMeasurements
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Measurement"
      responses:
        "204":
          description: OK
        default:
          description: Unexpected error
          content:
            "application/json; charset=utf-8":
              schema:
                $ref: "#/components/schemas/ProblemDetails"

  /sensors:
    get:
      tags:
        - Sensors
      description: Get sensors.
      operationId: getSensors
      responses:
        "200":
          description: Sensors response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Sensor"
    post:
      tags:
        - Sensors
      description: Create sensor.
      operationId: postSensor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Sensor"
      responses:
        "200":
          description: Sensor response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Sensor"
        default:
          description: Unexpected error
          content:
            "application/json; charset=utf-8":
              schema:
                $ref: "#/components/schemas/ProblemDetails"
  /sensors/{id}:
    get:
      tags:
        - Sensors
      description: Get sensor by id
      operationId: getSensorById
      parameters:
        - name: id
          description: Id of sensor to fetch
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Sensor response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Sensor"
        "404":
          description: Sensor not found
        default:
          description: Unexpected error
          content:
            "application/json; charset=utf-8":
              schema:
                $ref: "#/components/schemas/ProblemDetails"
    put:
      tags:
        - Sensors
      description: Update sensor
      operationId: putSensor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Sensor"
      parameters:
        - name: id
          description: Id of sensor to update
          in: path
          required: true
          schema:
            type: string

      responses:
        "204":
          description: Sensor updated
        "404":
          description: Sensor not found
        default:
          description: Unexpected error
          content:
            "application/json; charset=utf-8":
              schema:
                $ref: "#/components/schemas/ProblemDetails"
    delete:
      tags:
        - Sensors
      description: Delete sensor
      operationId: deleteSensor
      parameters:
        - name: id
          description: Id of sensor to delete
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Sensor deleted
        "404":
          description: Sensor not found
        default:
          description: Unexpected error
          content:
            "application/json; charset=utf-8":
              schema:
                $ref: "#/components/schemas/ProblemDetails"

components:
  schemas:
    ########################################################################
    # Measurements
    ########################################################################
    Measurement:
      type: object
      description: Measurement data from one source
      additionalProperties: false
      required:
        - time
        - source
      properties:
        id:
          type: string
          description: Measurement unique identifier. Generated on insert.
        time:
          type: string
          format: date-time
          description: Measurement time as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z
        source:
          type: string
          description: Source of measurement. With ruuvi tag this is MAC.
        temperature:
          type: number
          format: double
          description: Temperature in celsius.
        pressure:
          type: number
          format: double
          description: Pressure
        humidity:
          type: number
          format: double
          description: Humidity
        battery:
          type: number
          format: double
          description: Battery level. TBD what is the format.
        acceleration:
          $ref: "#/components/schemas/Acceleration"

    Acceleration:
      type: object
      description: Acceleration
      additionalProperties: false
      properties:
        acceleration:
          type: number
          format: double
        accelerationX:
          type: number
          format: double
        accelerationY:
          type: number
          format: double
        accelerationZ:
          type: number
          format: double

    ########################################################################
    # Sensors
    ########################################################################
    Sensor:
      type: object
      description: Sensor producing measurements data
      additionalProperties: false
      required:
        - id
        - description
      properties:
        id:
          type: string
          description: Sensor unique identifier (ruuvitag MAC)
        description:
          type: string
          description: Sensor description.

    ########################################################################
    # Data responses
    ########################################################################
    MeasurementsDataResponse:
      type: object
      description: Response object for measurements.
      additionalProperties: false
      properties:
        count:
          type: integer
          description: Count of items returned.
        total:
          type: integer
          description: Total number of items.
        items:
          type: array
          items:
            $ref: "#/components/schemas/Measurement"

    ########################################################################
    # Problem details based on rfc7807.
    ########################################################################
    ProblemDetails:
      type: object
      description: Problem details based on rfc7807.
      additionalProperties: false
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
        extensions:
          type: object
          additionalProperties:
            type: object
            additionalProperties: false
          nullable: true
          readOnly: true
    ValidationProblemDetails:
      type: object
      description: Problem details for validation errors.
      additionalProperties: false
      properties:
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
          readOnly: true
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
        extensions:
          type: object
          additionalProperties:
            type: object
            additionalProperties: false
          nullable: true
          readOnly: true

  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://example.com/oauth/token
          scopes:
            read: Grants read access
            write: Grants write access
            admin: Grants access to admin operations
        authorizationCode:
          authorizationUrl: https://example.com/oauth/authorize
          tokenUrl: https://example.com/oauth/token
          scopes:
            read: Grants read access
            write: Grants write access
            admin: Grants access to admin operations
