{
  "id": "23cb6d83-db91-4dc9-93f5-31d8517dee6e",
  "realm": "measurements-app",
  "displayName": "",
  "displayNameHtml": "",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 300,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "none",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "eb9a0523-4fb4-43a0-a4b3-1c18d63bf026",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "23cb6d83-db91-4dc9-93f5-31d8517dee6e",
        "attributes": {}
      },
      {
        "id": "274b9640-8f55-48c7-bffa-dfe8b7125f75",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "23cb6d83-db91-4dc9-93f5-31d8517dee6e",
        "attributes": {}
      },
      {
        "id": "5ad3d4f4-dd6c-4601-a2b1-bec4e9979b01",
        "name": "admin",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "23cb6d83-db91-4dc9-93f5-31d8517dee6e",
        "attributes": {}
      },
      {
        "id": "b82b629e-3efb-4c81-aa46-b4ee26c00479",
        "name": "writer",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "23cb6d83-db91-4dc9-93f5-31d8517dee6e",
        "attributes": {}
      },
      {
        "id": "2214878a-9da9-405f-9588-73da752b8dd4",
        "name": "default-roles-measurements-app",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "manage-account",
              "view-profile"
            ]
          }
        },
        "clientRole": false,
        "containerId": "23cb6d83-db91-4dc9-93f5-31d8517dee6e",
        "attributes": {}
      },
      {
        "id": "84b2d72c-ef2a-485f-9891-883081c7c71e",
        "name": "reader",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "23cb6d83-db91-4dc9-93f5-31d8517dee6e",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "fbe80f98-040d-449c-849a-a918ee7eb1d2",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "60832613-d011-4ff1-80e9-9d569c43bfc1",
          "attributes": {}
        },
        {
          "id": "51aec0b0-67e1-4cd1-bf80-496b15498acb",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "60832613-d011-4ff1-80e9-9d569c43bfc1",
          "attributes": {}
        },
        {
          "id": "cf4b8781-afca-4710-9baa-17480af31765",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "60832613-d011-4ff1-80e9-9d569c43bfc1",
          "attributes": {}
        },
        {
          "id": "c959fbfe-b1ff-4908-97ff-ad64380c0e94",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "60832613-d011-4ff1-80e9-9d569c43bfc1",
          "attributes": {}
        },
        {
          "id": "af8ced09-c6f1-476e-806e-395e80eb5bd5",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "manage-events",
                "create-client",
                "query-users",
                "impersonation",
                "query-clients",
                "view-identity-providers",
                "manage-users",
                "manage-clients",
                "query-realms",
                "view-events",
                "manage-authorization",
                "view-users",
                "view-realm",
                "view-authorization",
                "query-groups",
                "manage-identity-providers",
                "manage-realm",
                "view-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "60832613-d011-4ff1-80e9-9d569c43bfc1",
          "attributes": {}
        },
        {
          "id": "519bf51a-a3df-4189-840c-fbb9fd7e92dd",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "60832613-d011-4ff1-80e9-9d569c43bfc1",
          "attributes": {}
        },
        {
          "id": "e63d1ad2-f15e-4490-ac84-6dc9b1baf3c4",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "60832613-d011-4ff1-80e9-9d569c43bfc1",
          "attributes": {}
        },
        {
          "id": "9211dc54-bd16-4bf7-b8a6-7b9fedb686d6",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "60832613-d011-4ff1-80e9-9d569c43bfc1",
          "attributes": {}
        },
        {
          "id": "840dd889-14a8-4b94-a7d8-27b7f3605344",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "60832613-d011-4ff1-80e9-9d569c43bfc1",
          "attributes": {}
        },
        {
          "id": "5af95d0b-e28b-4ad5-9490-d8bea7ea7ebe",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "60832613-d011-4ff1-80e9-9d569c43bfc1",
          "attributes": {}
        },
        {
          "id": "9f1558c1-ca17-4e5e-b23b-3086f257f5dd",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "60832613-d011-4ff1-80e9-9d569c43bfc1",
          "attributes": {}
        },
        {
          "id": "590f7482-80de-4fe7-ac33-2a81531320b9",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "60832613-d011-4ff1-80e9-9d569c43bfc1",
          "attributes": {}
        },
        {
          "id": "da929d9f-541c-4f87-90c7-71b1aa0f8eae",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-users",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "60832613-d011-4ff1-80e9-9d569c43bfc1",
          "attributes": {}
        },
        {
          "id": "ea424805-cf52-4f04-9ea2-d8cb3f64103e",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "60832613-d011-4ff1-80e9-9d569c43bfc1",
          "attributes": {}
        },
        {
          "id": "e2e619f2-9c88-4d4b-b3b0-e63248e84637",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "60832613-d011-4ff1-80e9-9d569c43bfc1",
          "attributes": {}
        },
        {
          "id": "3ef39f09-7a6b-4a6f-a0a6-eea7a9d5f609",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "60832613-d011-4ff1-80e9-9d569c43bfc1",
          "attributes": {}
        },
        {
          "id": "11c935b6-391b-4d73-95bf-1403230a5d20",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "60832613-d011-4ff1-80e9-9d569c43bfc1",
          "attributes": {}
        },
        {
          "id": "192e785b-c391-4886-9a9f-9c485c24dcbc",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "60832613-d011-4ff1-80e9-9d569c43bfc1",
          "attributes": {}
        },
        {
          "id": "ce63cd4f-f769-44b5-aa6e-e2e61362d17e",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "60832613-d011-4ff1-80e9-9d569c43bfc1",
          "attributes": {}
        }
      ],
      "measurements-api": [
        {
          "id": "126e4b49-6c93-45d7-8ebd-304ae4aed701",
          "name": "uma_protection",
          "composite": false,
          "clientRole": true,
          "containerId": "052f70d0-7aaf-44a7-8f6d-63938b6fc591",
          "attributes": {}
        }
      ],
      "measurements-collector": [
        {
          "id": "2f0cdc8b-b322-4279-bd54-8f08354e86fb",
          "name": "uma_protection",
          "composite": false,
          "clientRole": true,
          "containerId": "98feb79b-e778-4aa2-aca6-41b891fd1346",
          "attributes": {}
        }
      ],
      "measurements-webapp": [
        {
          "id": "c24d880f-9f19-4c47-aa8b-89f8766d6737",
          "name": "uma_protection",
          "composite": false,
          "clientRole": true,
          "containerId": "4685e246-94d1-423a-8c09-605595872069",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "a6afc1c5-c529-4b39-b424-1f95ff55b334",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "a245eb63-de44-4444-9f65-45d5f008847c",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "6693a557-0444-4796-9c00-189f56421842",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e083cae8-fee0-4d96-ad12-79d1e8aea046",
          "attributes": {}
        },
        {
          "id": "97438987-862b-43fb-b115-43abbb09c4d4",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "e083cae8-fee0-4d96-ad12-79d1e8aea046",
          "attributes": {}
        },
        {
          "id": "30a12e45-9135-473e-bd23-9e9fd9887c89",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "e083cae8-fee0-4d96-ad12-79d1e8aea046",
          "attributes": {}
        },
        {
          "id": "d9c81436-e38e-40da-9cfc-4a5b92eb8a81",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "e083cae8-fee0-4d96-ad12-79d1e8aea046",
          "attributes": {}
        },
        {
          "id": "ddfec2c5-d6be-4682-a949-e76874e80062",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "e083cae8-fee0-4d96-ad12-79d1e8aea046",
          "attributes": {}
        },
        {
          "id": "b47d08ff-3c50-4fa7-bf7d-68b053e3cb72",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "e083cae8-fee0-4d96-ad12-79d1e8aea046",
          "attributes": {}
        },
        {
          "id": "4786d6ec-1451-4bfe-a7ef-24ca91f0ca6a",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e083cae8-fee0-4d96-ad12-79d1e8aea046",
          "attributes": {}
        },
        {
          "id": "0576defe-0ade-42f2-91e2-3881b7c3ecb4",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "e083cae8-fee0-4d96-ad12-79d1e8aea046",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [
    {
      "id": "b91aab53-69b4-4c84-b227-a2bfa3b0b6bd",
      "name": "measurements-admins",
      "path": "/measurements-admins",
      "attributes": {},
      "realmRoles": [
        "admin"
      ],
      "clientRoles": {},
      "subGroups": []
    }
  ],
  "defaultRole": {
    "id": "2214878a-9da9-405f-9588-73da752b8dd4",
    "name": "default-roles-measurements-app",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "23cb6d83-db91-4dc9-93f5-31d8517dee6e"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "id": "4d754d80-73ec-4e3f-9b2f-62987483c3f0",
      "createdTimestamp": 1670150952445,
      "username": "admin",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "firstName": "Admin",
      "lastName": "Foobar",
      "email": "admin@example.com",
      "credentials": [
        {
          "id": "b44b7b94-48df-495c-a97f-525810f3046c",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1670150966084,
          "secretData": "{\"value\":\"xEkyEoqEScNltJwERGR88OAu0k9irztX+XjiEbFAtEMEM77fRO1bE+DbYs4wq/4AALeNVv8zN2TArUQmDKSrSg==\",\"salt\":\"WTNCMHl91ILMNMZwzbZOXw==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-measurements-app"
      ],
      "notBefore": 0,
      "groups": [
        "/measurements-admins"
      ]
    },
    {
      "id": "f7d9755f-7250-4b71-b9d7-bbee8dd40637",
      "createdTimestamp": 1670509577066,
      "username": "service-account-measurements-api",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "measurements-api",
      "credentials": [],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-measurements-app"
      ],
      "clientRoles": {
        "measurements-api": [
          "uma_protection"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "e183e04d-c474-40b4-80cc-a0e73c87fa71",
      "createdTimestamp": 1670151155253,
      "username": "service-account-measurements-collector",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "measurements-collector",
      "credentials": [],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "writer"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "b0478808-7099-4eab-9171-aa55ca9eaf9a",
      "createdTimestamp": 1670150855904,
      "username": "user",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "firstName": "User",
      "lastName": "Foobar",
      "email": "user@example.com",
      "credentials": [
        {
          "id": "9149f1dc-fd9e-4d9a-8081-6ca83f0c55d7",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1670150873464,
          "secretData": "{\"value\":\"j+Uf4hW1zmF2lReTCHcX2SkibrFWqk4J6+edzNkbeXgryyCJu1WTHYNkXR41ah1G/xE+Es5/u8ItVsrg392bGQ==\",\"salt\":\"eRKiw2jWu3IU8QsawMKlwg==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-measurements-app",
        "reader"
      ],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "e083cae8-fee0-4d96-ad12-79d1e8aea046",
      "clientId": "account",
      "name": "${client_account}",
      "description": "",
      "rootUrl": "${authBaseUrl}",
      "adminUrl": "",
      "baseUrl": "/realms/measurements-app/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/measurements-app/account/*",
        "http://localhost:8080/test-callback"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "f68b2569-a80f-48ff-bf85-a417b85d4c91",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/measurements-app/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/measurements-app/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "6db8b701-4fb9-4b56-bad3-bdaa074d8bde",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "4dfc10cd-a421-449e-9f92-ee92c0869c77",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "a245eb63-de44-4444-9f65-45d5f008847c",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "052f70d0-7aaf-44a7-8f6d-63938b6fc591",
      "clientId": "measurements-api",
      "name": "Measurements api",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "LBmnaEuyiCLte8TMdepUx1qftMSyCJtG",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1669983813",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "use.jwks.url": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "8fa1ad41-4175-44ae-ae22-9cefce7fe203",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "29d734db-4f31-4388-8890-810225b04625",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "10ea2919-9c73-49bc-adcb-3405c68f6f62",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "98feb79b-e778-4aa2-aca6-41b891fd1346",
      "clientId": "measurements-collector",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "Pb4pMgu8ZB8pJEJViRoRqKcSxXj4o0Hr",
      "redirectUris": [
        ""
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "client.secret.creation.time": "1669983965",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "use.jwks.url": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "use.refresh.tokens": "true",
        "tls-client-certificate-bound-access-tokens": "false",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "acr.loa.map": "{}",
        "require.pushed.authorization.requests": "false",
        "display.on.consent.screen": "false",
        "token.response.type.bearer.lower-case": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "44b3a78f-6b04-49c2-a75e-3d48ed4f2ba9",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "dd7eec10-c7c4-4435-aaea-f3190c0470f1",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4473fcfb-f10c-4951-a6dc-8d73ae12634f",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email",
        "measurements"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "4685e246-94d1-423a-8c09-605595872069",
      "clientId": "measurements-webapp",
      "name": "Measurements web application",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "http://oauth.pstmn.io/v1/callback",
        "*",
        "http://localhost:5173",
        "http://localhost:8001"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1670151355",
        "backchannel.logout.session.required": "true",
        "login_theme": "keycloak",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "702f3e11-0961-4fd1-bf52-05529618e306",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "58f26669-fab6-4d55-b6c5-aa6ce8bb1ff9",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "73bc3c3e-a528-4d91-99ce-d00611ccc163",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email",
        "measurements"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "60832613-d011-4ff1-80e9-9d569c43bfc1",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "eb153a55-1306-4a1a-a794-0aa5b084669a",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/measurements-app/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/measurements-app/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "cfe021a4-a46b-4226-ad2c-34bb1a1b4cb1",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "78e0554b-26bb-47c5-8e6f-d13fc2f06c82",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "bae6c112-edbf-4060-8a28-00f9bf96c27c",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "3061f543-f4f7-4c3e-8a94-1c658774f414",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "31a3737d-0663-41dc-9915-300bc2a6685e",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "509f829e-0444-4ab1-93ba-9e1a746b8f26",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "b8d83a96-9e49-4aaf-a293-3770e16c4905",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "bfbaa563-2537-431c-9192-edd4b9256328",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "331e8ed4-8cee-4a69-859e-9eb6e12f3361",
      "name": "measurements",
      "description": "Client scope for measurements api",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "gui.order": "",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "58b03234-5775-42c1-b0ce-0fd8a07172b8",
          "name": "Audience for measurements Api",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "measurements-api",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "userinfo.token.claim": "false"
          }
        }
      ]
    },
    {
      "id": "9d4fbc51-54e8-4380-9e25-b15bdfa5c1be",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "4ebe68ab-87bc-4410-afdf-5aacd406391a",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "c541ca76-c7a7-45e2-8826-e87e5ea5e4b3",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "d24c3606-580a-4806-8177-f8c46e73642f",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "c634fd0d-8b96-4ad0-b371-06d706bf3019",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "7022d1de-b17d-4eb1-9829-915bb2f1fa1d",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "6122204b-cc70-4a70-91cb-52d9cbbd44be",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "4baf6814-e26d-401f-8de4-f6891f4ec893",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "0c3a8169-e987-489f-ae80-0ee720a6ff45",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "574708db-d1d5-4b68-b7fd-5fb2a0ed7609",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "c613a17b-6573-472b-ac3f-a561cce44dc4",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "f89b34b8-ebd6-4d2d-a8c5-755eec708f98",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "22294b67-7441-4512-a47c-8acb60a8f631",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "2db32ffa-fc81-4e4c-91d3-0e70e1940db1",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "44fbf4ac-296d-4938-9dd4-da550bed8ba5",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "12fc6b93-2166-4b1c-9028-1043d8aafb9e",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1620be87-6a3f-497b-ae87-a5cefbd94dcf",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "d85bad12-b063-4052-8928-380799ffea9e",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8d06a893-000e-4e6c-ad14-f0bed2902512",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f589032b-e25d-4c31-a894-de8835a43706",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "90f9fd3f-116c-4659-bb32-2272729586ac",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "fd848e7f-5cff-435a-8870-b5a992d6ef3d",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "30f4f71f-bc9a-4dca-bb3a-5a4892bdef76",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "dac77db6-890d-4d97-b46c-c3da27e434d5",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "fec2d10f-206e-48c2-9cac-ee7e263d11f7",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "393ae432-1265-4fc0-bb47-34f7e859a25b",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "42fb86d9-24cf-4fdb-9acf-d976ca147bb2",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "d22f01b2-c9bf-4187-8ee3-2bf244e3c477",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "ab8b58d5-a114-4e1f-9ded-8317349f25ee",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "095da090-2f7d-4275-897c-4d1e04cde07d",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "f73c5dd7-de0f-4c9a-845c-d2ebcef56c10",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "e4411808-5f75-49cb-a90a-07332f584442",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-property-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-full-name-mapper"
          ]
        }
      },
      {
        "id": "0f973ed3-1b18-4273-90ec-102ac181ef60",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "1d65ee0f-0e85-4764-9755-71ca5abdaccd",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "6e568ea3-14a2-40bb-9109-726b4dfe5c4d",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "01aca5f4-f225-425f-a060-ce1cd86d4116",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "1777cd0d-c9b4-452b-847d-fb22662b042b",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "6a505513-ae13-4c94-b4d6-15b8cd40bb60",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-property-mapper",
            "saml-user-property-mapper",
            "saml-role-list-mapper",
            "oidc-full-name-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-address-mapper",
            "oidc-sha256-pairwise-sub-mapper"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "40f16495-fd30-4006-b805-c38e27dcc1fb",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "6a270ca0-3f67-48d5-8068-aa525525e49b"
          ],
          "secret": [
            "EpkL0N_8xHe1HLhfQwgwWA"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "690f6523-d8e8-4dbd-ad69-3c3bdd2390b6",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAzH8RcoARw3vBImzt7Z/u8q7W1wINwUIoSGUOXEXkOv2R5F+nv0H1FT+wOd/+knSp2PlN8OZnOidVq344HYDALRpCgKfTmLbdhmIwzQBkDY1mAIezlHe2IuTpKBThJOB/vFZhYGAdzFW+6uYh54AxLjtF9YPPzg71VTpxWtV/Q260U3VCQBuy49vyY31e3QlInNWSFJ1M3epdqxUZqcJVXdjmSMZLaklSqk6ERG+MjqyFsnYbczsRO7/XBKGu+UR486AnzcJ066tu+tvWARjEsBTP0LBKeXBDde7VZV8WMtdIFtu+hQgBF+0fFAH+PSzrQE4Rj1nIPPQGU04ra/XQFQIDAQABAoIBAAO6XkxO0uQULbttrnG6TG4eq1p8llkbVmYpd3dNq+E6ba4y4zk8n9XtFQ6dC4RKfa0vsFDPtnqMLIbllGrPRdGcrLExPg2G6edxA1A9bVWE6iLg1nCCtS6SK0D4jnkwYYvCrGBIKErpFkOsgdo5T0w3NumIp2FriuPsnpPoF/uX8PbHleJTkOyt+aSRz7/y6VyJVYLgjwedokrZLkJsgJRAUTYd//Bd3YT1E+zuvkMb+xmsGY91NDWopzIXFxndS4EndK2hdbwbWp3WP33lEZ8uBNDTS5ld6JFSGooD57vRehSMdP5aTb/idR0Il8XaCtsy33cTQIRx+iKQgKyHnoECgYEA7iVI6ewCzLrAnEXR1ASxDwyT8EIhDVW0yZG7goKRNyFC3Y3j2z9XG3ASNHUEXhBP/Bm/YO48yj4f1gj3GPTmU2+G3YmXITedLq4UsIfCGpOV16nUNCfwBscIHC6/B/UijOaYnkOEvev90y3vOKy0d2bswIc87GFoynF+CGk1VYECgYEA29P0YqHjYn36wHAsknMRLmEFdyMW+LtU1AJSVfBWBo8aP0ampQOdqCHy14xsQ8qks6r9taHqsHD8VQg/P7quT9hsP7HmXFA9czOvBijrofglnpEB0KVHeCXWoTCHyimE+Hbo9mgf+sLl0L+e//cJ5dfUxfsoCN2iW6OJsp5pDJUCgYAObQ/Hq9ZXlJCKZuhZEZewM7DagwcBicmT1FIpi8NENa2ZQjklVObv8JAJwXTsRcyyltSzCHuCPNUs4Aon5t30+/KNhQI0ruvEoiL6tp6ZgYs4Lz99kVXG81OYcXR9BOp84pMoMyrdXmhX3JZ7NmsQOJnq58ZXA2eXq9xYohbrAQKBgQDUctZHkF8567ivzHk3G9+p6/glOJNV1W3Y61l5Vqk884YRSw14grMWL6EK8dob9jcQsJs7s30mAjvLTgoaZCdcYTPUpvCTnLSWpodrM5buVOy+fzO62lDk6+SuqUFCfrfUjM7+fIkThtIl2Vsn0y8Mo3ct01nQn6nuWHGWX4P0tQKBgQDEIXmAVK6q/IE6wx2ncHIFrg0mngYT7mjnZ/Qy79acUw24nMEToECBfh73T56omGfA7qNShmmRYY8YmQW29yhDoP42VOpDV76PXAHkP+wP2QsiFJ4iXu5CoDAHmb5+v7WTQzWSAFxnsHWcNIU3EuxDa1UcbG0Xw+hsmd2CuQoJ2A=="
          ],
          "keyUse": [
            "SIG"
          ],
          "certificate": [
            "MIICrzCCAZcCBgGE0rNEKzANBgkqhkiG9w0BAQsFADAbMRkwFwYDVQQDDBBtZWFzdXJlbWVudHMtYXBwMB4XDTIyMTIwMjExNTYxNFoXDTMyMTIwMjExNTc1NFowGzEZMBcGA1UEAwwQbWVhc3VyZW1lbnRzLWFwcDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMx/EXKAEcN7wSJs7e2f7vKu1tcCDcFCKEhlDlxF5Dr9keRfp79B9RU/sDnf/pJ0qdj5TfDmZzonVat+OB2AwC0aQoCn05i23YZiMM0AZA2NZgCHs5R3tiLk6SgU4STgf7xWYWBgHcxVvurmIeeAMS47RfWDz84O9VU6cVrVf0NutFN1QkAbsuPb8mN9Xt0JSJzVkhSdTN3qXasVGanCVV3Y5kjGS2pJUqpOhERvjI6shbJ2G3M7ETu/1wShrvlEePOgJ83CdOurbvrb1gEYxLAUz9CwSnlwQ3Xu1WVfFjLXSBbbvoUIARftHxQB/j0s60BOEY9ZyDz0BlNOK2v10BUCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAEVoog1jcomLdYETAFr74x6I/aSSL4LHZ3OOMEU5XVRtlfdfpKuCKYuZ3c4I7mwO5yYeipdqRTbnej9k5F0ikR3qId8524aGxmy7BzLxot8exgZuMm+sOJ/MBOe3gXL1i9Rx42pu8+wu2KNeBRd4MHJAO1EWqT6jEfT1l7FZkC1EjEDpoaZupK1imw+i+8qWeJxWPJpnT2tKSd9LiiqTUxC2Jxy/FI+d7IEDFraJjstEAy/JaLYPRuKW8umk64mcudjaK7W5CG3BbFx2o6RW2mOvvWxl4sgTeOiNBsIoyMFdd0HUGttLop7o0T9/kqGkg8krZrDYzGpwZOzyBDUUr1Q=="
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "c267abb1-a746-4576-b774-356da8f26a05",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEAq9KkPNAwTVHKmsSAvS7fV8BgHwSocnfZr8/eP+l+pY0O+bLwvfOYn0SKl8jj1SYosd2yZXg+xgJUg/xs/wnFqH3YxuT6sCBJQCCeGKnQe6jt7Smlrha2ZU3sfs8hTjdIoG6SqABbCoMAdAmmNIsZH0j5Pe9osYTxeaMiKZxxZWfZtUdkGNWvbRYFflYd2ZY0NC3NzEIAFpNzilT09a2m+ghCjfZF31FmcXZhL4ptwJG23FQ4xYPsBZdfwsjnfhA2jymeYP+5LgSuZhxBiaLdH9rLYV8mwFonz5qWrZFPiha5v14DNrnouB2ZBvDSQ9tL7goMR/PdVz0ckmMZu2xsaQIDAQABAoIBAAH6l24ScS0dE65+NCiCxMIo5RumWHDfVzTXFT+xnfO23q4Rq7rXv5YGkUZX0OLHWDp/C6aT8wWzyL1B1aIZdaQZEKklwYrL40Cndl88xgL8TJUy4KocQiPxQgVgt7/WN9/7/ytm4ID5s/trSL6uUNyuvEHW2fVTJpI9IhkXTTvj8a2sARur+qLjJsMiTq6GEnB9LBbpsO8yjaX3UEOYMnoiEMw6gqO0C99N4hYrgKT1T4yrW9CJw+43EoA0q9JpS2IAAPF1OtDVWAlU0zwmTTzOLh/06B7szL+EJ6RX5ONCBg9PD316NZ6O3V9nUngeJpTzTyjzgKIqtBFtJJ08lQECgYEA2637d44F4uaa9MPXTX48fEgMnykvF0T8nrPf597glmsjB8hUnfw/b8evy954qhQ5W2YeNEvR3vHi6/+B3KwL4Jy+wc8eKo6c+Uk6yz98kUQ1Hgny2dYZ5CAbrN6BZ6dxMatDy1jz/Ns53fxzNIHRBYYo7JK8CE+6Y1yLD9ysNEECgYEAyDsabnT6emtGGq+FfXy+x3R8dvjo2xiNaUQeY1eF1s/Ii3eXPBqntI05HTVlmiNoooANyG3SWv7eiGgBxQtxQS6V9JEk4uKBpkythcEvff6V1R+L3YflCrgUoIZShcoo2hGjk8St+iNq/FZAzYEY1w0j4OXC1qry1gtNsTfcjikCgYBPcFvWANqqEYAJcORjlnmi65780zS/Mmgzr5IRVCxc2INDZjMLKlN6RXiRvXJe9o9DOOtFOAG9oDTR6IR6WxC0eZoVlaMv+oBTOSL0qpGOKl8W7LwP//c+4kl/urqK1Cb/shIC77jTQCdt2cODQkpmt/wGiI1MaCBbm/SBmOgAwQKBgBzx/lYtbvA3hcDh0shbOjEXM873GKJjoD2xbTsrMdvl2bXfqes0Zz4AlFsWlwN7Tur+2/83cQtagMzzTB4yE0M6+s6KFOz/lYJ23zbQwI7UONDAaLWzqXatOb4i7NcObG1p013PNt9MM3Ea/u82VGLyMVeXn1ztBYHPzIFr8+RRAoGBAKPm/AaCLlviVqShox47eGdjZslZofPUgeU1YRJrqYZUzY0VB8Dt074DxOyBYLlfEXXiUiV+5hmZfCu44LhK/mjVUZ4KasM00w55ZTU1kuui0/yep/cdeEK+4xpy8F+GEML5CPL8FjH2U0+k6TXTT833Ee2lqnfle6OQ/1Wu5tf8"
          ],
          "keyUse": [
            "ENC"
          ],
          "certificate": [
            "MIICrzCCAZcCBgGE0rNFVDANBgkqhkiG9w0BAQsFADAbMRkwFwYDVQQDDBBtZWFzdXJlbWVudHMtYXBwMB4XDTIyMTIwMjExNTYxNFoXDTMyMTIwMjExNTc1NFowGzEZMBcGA1UEAwwQbWVhc3VyZW1lbnRzLWFwcDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKvSpDzQME1RyprEgL0u31fAYB8EqHJ32a/P3j/pfqWNDvmy8L3zmJ9EipfI49UmKLHdsmV4PsYCVIP8bP8Jxah92Mbk+rAgSUAgnhip0Huo7e0ppa4WtmVN7H7PIU43SKBukqgAWwqDAHQJpjSLGR9I+T3vaLGE8XmjIimccWVn2bVHZBjVr20WBX5WHdmWNDQtzcxCABaTc4pU9PWtpvoIQo32Rd9RZnF2YS+KbcCRttxUOMWD7AWXX8LI534QNo8pnmD/uS4ErmYcQYmi3R/ay2FfJsBaJ8+alq2RT4oWub9eAza56LgdmQbw0kPbS+4KDEfz3Vc9HJJjGbtsbGkCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAHpLGbYiBA58dVH4teMZiSmBbcQ0cF2oYAQxzVVfedatHN/IB4kQUrTrVUZtkL2p464p7z7WVHRvIKP1sk5lipD4oJkx3PBBTojvEps/j4wUTwUQSjO4jEL3wwud89M/euzfi8UXaHTk08qf9SCqW0yVN/HYOvjhCrYMfUYoAc6TT7n7fgrH7ABIQFX29FlgU3TAn7EQOqvf5eEqVz7IdWSOrzyYbnSnt2NcuC3fMIlMDhBPOLf/z+u7Ngzz/fCAipa4OyGcnAKXRIGnE9RNxb83KpfAczSpq6BFw6e8WsAQ1lR85p+5yOQYBNiRC1pUlgzR+VRCSKyBtKk8Bl7fVHA=="
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "c256e8a0-ec4e-40ee-ada7-e342c011e61e",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "1c853773-04b9-4a95-bd2a-3b02404e79ad"
          ],
          "secret": [
            "RGm-Yr1SscQ7pLPLa0lCnKvpB7vykzQWF68JM0Nt41ilMMVIOXnivdPH141VZFH3CWlTe9w4Vwn6uGFDnt0qgg"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "feafe070-c350-40c2-abb1-9782c2cd5f77",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6bcccc2b-f794-4d34-95e8-f9b8a7af003d",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1e321bec-2a8c-42c4-8396-4a2047215630",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9c4e8f09-43de-4aaa-a4c7-b417f6e0f767",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "acf0c6f9-3fea-43bc-9a4f-6b2dc58567ed",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "729c5117-1f8b-447c-97bd-8ebb5bff51c0",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6da0d56c-7f55-43ee-8c37-359d3260e246",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "83e93704-98d6-4557-b1a7-197b2c427931",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "32471f59-2e98-4739-b905-5b4c2bf84fa4",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "fab90910-6fb8-4dab-890e-7aecd9144224",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7b6bd144-4925-4665-9e25-b52cd36749bc",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5fc471c6-d5f4-4c22-93a1-27f8a8d79b18",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "09411521-6145-466e-8b45-59ac8e3de735",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5f14d0a4-6599-4de2-b598-7de2bb6f2c0c",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9aac4cb9-2a74-4e38-b656-c9f520bdf608",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "783365c0-409e-4529-a19c-3df462cbcde7",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "45eaf401-149e-4542-a5f6-abc4b0727020",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "06377c50-ec62-4dcc-ad0f-70df1d622bf5",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ce969063-63ac-4250-807f-d727b082613d",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "aea078f2-d18d-4371-98a2-7bc0e15bccec",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "3bc072eb-d7c9-4d1f-bcc8-6f92e1f6ba94",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "901f302a-82bc-4225-9433-44794f245df8",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaAuthRequestedUserHint": "login_hint",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "actionTokenGeneratedByUserLifespan-execute-actions": "",
    "actionTokenGeneratedByUserLifespan-verify-email": "",
    "clientOfflineSessionIdleTimeout": "0",
    "actionTokenGeneratedByUserLifespan-reset-credentials": "",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false",
    "cibaExpiresIn": "120",
    "oauth2DeviceCodeLifespan": "600",
    "actionTokenGeneratedByUserLifespan-idp-verify-account-via-email": "",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "frontendUrl": "",
    "acr.loa.map": "{}"
  },
  "keycloakVersion": "20.0.1",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
