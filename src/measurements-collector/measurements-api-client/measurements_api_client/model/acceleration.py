# coding: utf-8

"""
    Measurements API

    API to fetch ruuvi tag measurements data.  # noqa: E501

    The version of the OpenAPI document: 0.1.0
    Contact: tbd@example.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from measurements_api_client import schemas  # noqa: F401


class Acceleration(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Acceleration
    """


    class MetaOapg:
        
        class properties:
            acceleration = schemas.Float64Schema
            accelerationX = schemas.Float64Schema
            accelerationY = schemas.Float64Schema
            accelerationZ = schemas.Float64Schema
            __annotations__ = {
                "acceleration": acceleration,
                "accelerationX": accelerationX,
                "accelerationY": accelerationY,
                "accelerationZ": accelerationZ,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["acceleration"]) -> MetaOapg.properties.acceleration: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["accelerationX"]) -> MetaOapg.properties.accelerationX: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["accelerationY"]) -> MetaOapg.properties.accelerationY: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["accelerationZ"]) -> MetaOapg.properties.accelerationZ: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["acceleration"], typing_extensions.Literal["accelerationX"], typing_extensions.Literal["accelerationY"], typing_extensions.Literal["accelerationZ"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["acceleration"]) -> typing.Union[MetaOapg.properties.acceleration, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["accelerationX"]) -> typing.Union[MetaOapg.properties.accelerationX, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["accelerationY"]) -> typing.Union[MetaOapg.properties.accelerationY, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["accelerationZ"]) -> typing.Union[MetaOapg.properties.accelerationZ, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["acceleration"], typing_extensions.Literal["accelerationX"], typing_extensions.Literal["accelerationY"], typing_extensions.Literal["accelerationZ"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        acceleration: typing.Union[MetaOapg.properties.acceleration, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        accelerationX: typing.Union[MetaOapg.properties.accelerationX, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        accelerationY: typing.Union[MetaOapg.properties.accelerationY, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        accelerationZ: typing.Union[MetaOapg.properties.accelerationZ, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'Acceleration':
        return super().__new__(
            cls,
            *_args,
            acceleration=acceleration,
            accelerationX=accelerationX,
            accelerationY=accelerationY,
            accelerationZ=accelerationZ,
            _configuration=_configuration,
        )
