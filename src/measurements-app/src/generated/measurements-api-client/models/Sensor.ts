/* tslint:disable */
/* eslint-disable */
/**
 * Measurements API
 * API to fetch ruuvi tag measurements data.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: tbd@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Sensor producing measurements data
 * @export
 * @interface Sensor
 */
export interface Sensor {
    /**
     * Sensor unique identifier. Generated on insert.
     * @type {string}
     * @memberof Sensor
     */
    id?: string;
    /**
     * Sensor identifier. For ruuvi tags this is mac address. Must be unique.
     * @type {string}
     * @memberof Sensor
     */
    identifier?: string;
    /**
     * Sensor description.
     * @type {string}
     * @memberof Sensor
     */
    description?: string;
}

/**
 * Check if a given object implements the Sensor interface.
 */
export function instanceOfSensor(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SensorFromJSON(json: any): Sensor {
    return SensorFromJSONTyped(json, false);
}

export function SensorFromJSONTyped(json: any, ignoreDiscriminator: boolean): Sensor {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'identifier': !exists(json, 'identifier') ? undefined : json['identifier'],
        'description': !exists(json, 'description') ? undefined : json['description'],
    };
}

export function SensorToJSON(value?: Sensor | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'identifier': value.identifier,
        'description': value.description,
    };
}

